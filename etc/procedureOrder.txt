select * from orders
select * from product
select * from order_detail
TRUNCATE TABLE orders RESTART IDENTITY CASCADE;
TRUNCATE TABLE order_detail RESTART IDENTITY CASCADE;

[{}]

CREATE OR REPLACE PROCEDURE InsertOrderxDetail (In data1 json, In data2 json)
language plpgsql
as
$$
declare new_order_id int;

BEGIN
with order_id as(
insert into public.orders(user_id,totalproduct,totalprice)
	select x.user_id, x.totalproduct, x.totalprice from json_to_recordset(data1) x
	(
		user_id int, totalproduct int, totalprice int
	)
returning id)
select id into new_order_id from order_id;

insert into order_detail(order_id, product_id, quantity) 
select new_order_id, x.product_id, x.quantity from json_to_recordset(data2) x
(
	order_id int, product_id int,quantity int
);

END
$$


/////////////////////////Update/////////////////////////////////

CREATE OR REPLACE PROCEDURE updateorder(
	IN data json,
	IN data2 json)
LANGUAGE 'plpgsql'
AS $$
declare
    rows record;
	r record;
	dt record;
begin
   begin 
      select * from json_to_recordset(data2) as y(id int, totalproduct int,totalprice int) into dt;
      update orders set totalproduct=dt.totalproduct, totalprice=dt.totalprice where id=dt.id returning id
	  into rows;     
    FOR r IN select * from json_to_recordset(data) as x(id int, quantity int)
    LOOP
      update order_detail set quantity=r.quantity where id=r.id;	  
	  if not found or rows is null then 
	     rollback;
	       raise 'Id tidak ditemukan';
	  else
         commit;
	  end if;
	 END LOOP;
	end;
end;
$$;